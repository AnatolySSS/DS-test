services:

  nginx:
    container_name: db-invent-nginx-prod
    image: nginx:alpine
    restart: on-failure
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/inventory.conf:/etc/nginx/conf.d/inventory.conf
      - ./backend/build:/usr/share/nginx/html
      # - build-output:/app/build # volume для build react на проде
    command: >
      sh -c "
        rm -f /etc/nginx/conf.d/default.conf &&
        exec nginx -g 'daemon off;'
      "
    depends_on:
      - backend
    networks:
      - prod-network

  server:
    container_name: db-invent-backend-prod
    image: db-invent/backend-prod
    restart: on-failure
    build:
      context: backend
      dockerfile: Dockerfile
      target: prod
    # ports:
    #   - "80:80"  # Проброс порта для продакшн среды
    environment:
      NODE_ENV: prod
    volumes:
      - ./backend:/app
      - /app/node_modules # это для того, чтобы node_modules не удалялись в контейнере
      # - build-output:/app/build # volume для build react на проде
    depends_on:
      db:
        condition: service_healthy
      # frontend:
      #   condition: service_completed_successfully
    networks:
      - prod-network
    # command: ["dockerize", "-wait", "tcp://db:3306", "-timeout", "60s", "dockerize", "-wait", "file:///app/build/index.html", "-timeout", "60s", "npm", "start"]
    command: ["npm", "start"]

  db:
    container_name: invent-db-prod
    image: mysql
    restart: on-failure
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${PROD_DB}
      MYSQL_USER: ${PROD_USER}
      MYSQL_PASSWORD: ${PROD_PASS}
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 1s
      timeout: 10s
      retries: 10
    ports:
      - "${PROD_PORT}:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./backups:/backups
    networks:
      - prod-network

volumes:
  build-output:
    driver: local
  db-data:
    driver: local
    
networks:
  prod-network:
    driver: bridge